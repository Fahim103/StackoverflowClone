@model StackOverflow.Web.Models.CreatePostModel

@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm("Create", "Post", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    HtmlHelper.UnobtrusiveJavaScriptEnabled = true;

    <div class="form">
        <h4>Ask Question</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger", @placeholder = "Provide a title of your problem..." })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Content, new { @rows = "10", @cols = "50", @class = "form-control", @placeholder = "Provide a description of your problem..." })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                <input type="submit" value="Create" class="btn btn-primary" />
                @Html.ActionLink("Back to Questions", "Index", null, new { @class = "btn btn-outline-secondary ml-2" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
